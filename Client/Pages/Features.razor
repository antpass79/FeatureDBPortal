@page "/features"
@inherits FeaturesDataModel

<style>
    .feature-combination-filters-opened {
        margin-top: 15px;
        height: calc(100% - 300px);
    }

    .feature-combination-filters-closed {
        margin-top: 15px;
        height: calc(100% - 80px);
    }

    .feature-layout-grid {
        padding: 0px !important;
        width: 100%;
    }

    .feature-accordion-header {
        flex: 1;
    }

    .feature-accordion-header-content {
        align-self: flex-end;
    }

    .mat-layout-grid-inner > .mat-layout-grid-cell {
        margin: 10px;
    }

    .feature-error-message {
        flex: 1;
        align-self: center;
        margin: 15px;
        color: red;
    }
</style>

@if (DatabaseService.Connected)
{
    <MatAccordion>
        <MatExpansionPanel @bind-Expanded="@FiltersOpened">
            <MatExpansionPanelSummary>
                <MatExpansionPanelHeader>Filters</MatExpansionPanelHeader>
                <MatExpansionPanelSubHeader Class="feature-accordion-header">
                    <MatCheckbox Class="feature-accordion-header-content feature-checkbox" @bind-Value="@KeepOpen">Keep Open</MatCheckbox>
                </MatExpansionPanelSubHeader>
            </MatExpansionPanelSummary>
            <MatExpansionPanelDetails>

                <div class="mat-layout-grid feature-layout-grid">
                    <div class="mat-layout-grid-inner">
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-11">
                            <Filters SearchFilters="@SearchFilters"></Filters>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-1">
                            <MatButton Class="mat-component" Icon="search" Raised="true" @onclick="@(async () => await OnSearch())">Search</MatButton>
                        </div>
                    </div>
                </div>
            </MatExpansionPanelDetails>
        </MatExpansionPanel>
    </MatAccordion>

    <div class="@CombinationContainerClass">
        @if (string.IsNullOrWhiteSpace(ErrorMessage))
        {
            <CombinationMatrix Busy="@CombinationsBusy" Combination="@Combination" Filters="@CombinationFilters"></CombinationMatrix>
        }
        else
        {
            <p class="feature-error-message"><em>Unsupported Combination</em></p>
        }
    </div>
}
else
{
    <p class="feature-error-message"><em>Connect to a database</em></p>
}

<MatDialog @bind-IsOpen="@ShowCsvExportDialog">
    <MatDialogTitle>Download csv</MatDialogTitle>
    <MatDialogContent>
        <p>Choose the file name</p>
        <MatTextField @bind-Value="@CsvExportSettings.FileName"></MatTextField>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@OnDownload">Download</MatButton>
        <MatButton OnClick="@(e => { ShowCsvExportDialog = false; })">Cancel</MatButton>
    </MatDialogActions>
</MatDialog>

<MatDialog @bind-IsOpen="@ShowUploadDatabaseDialog">
    <MatDialogTitle>Upload...</MatDialogTitle>
    <MatDialogContent>
        <p>Choose a database file</p>
        <InputFile OnChange="HandleSelection" />
        <div>
            <span>Saved with name: @UploadedDatabase</span>
        </div>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@OnDatabaseUpload">Upload</MatButton>
        <MatButton OnClick="@(e => { ShowUploadDatabaseDialog = false; })">Close</MatButton>
    </MatDialogActions>
</MatDialog>

<MatDialog @bind-IsOpen="@ShowConnectToDatabaseDialog">
    <MatDialogTitle>Connect to...</MatDialogTitle>
    <MatDialogContent>
        <p>Choose the database name</p>
        @if (Databases == null)
        {
            <p><em>Databases Loading...</em></p>
        }
        else
        {
            <MatSelect Class="select-field" Label="Select a Database" Outlined="true" @bind-Value="@SelectedDatabase" TValue="string">
                @foreach (var database in Databases)
                {
                    <MatOption TValue="string" Value="@database">@database</MatOption>
                }
            </MatSelect>
        }
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@OnDatabaseConnect">Connect</MatButton>
        <MatButton OnClick="@(e => { ShowConnectToDatabaseDialog = false; })">Close</MatButton>
    </MatDialogActions>
</MatDialog>
