@page "/rules/requirements"
@inherits RequirementsDataModel

<style>
    .feature-combination-filters-opened {
        margin-top: 15px;
        height: calc(100% - 300px);
    }

    .feature-combination-filters-closed {
        margin-top: 15px;
        height: calc(100% - 80px);
    }

    .feature-layout-grid {
        padding: 0px !important;
        width: 100%;
    }

    .feature-filter-divider {
        margin-top: 10px !important;
        margin-bottom: 10px !important;
    }

    .feature-accordion-header {
        flex: 1;
    }

    .feature-accordion-header-content {
        align-self: flex-end;
    }

    .mat-layout-grid-inner > .mat-layout-grid-cell {
        margin: 10px;
    }

    .feature-logo {
        display: flex;
        align-self: center;
    }

    .feature-logo-text {
        flex: 1;
        align-self: center;
        margin: 15px;
    }

    .select-field {
        display: flex;
    }

        .select-field > .mdc-select__anchor {
            flex: 1;
            height: 36px;
        }
</style>

@if (FiltersBusy)
{
    <div class="feature-logo">
        <SpinKitCircle />
        <p class="feature-logo-text"><em>Loading Filters...</em></p>
    </div>
}
else
{
    <div class="mat-layout-grid feature-layout-grid">
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                @if (Options == null)
                {
                    <p><em>Options Loading...</em></p>
                }
                else
                {
                    <MatSelect Class="select-field" Label="Select an Option" Outlined="true" @bind-Value="EditableRule.Option.Id" TValue="int?">
                        <MatOption TValue="int?"></MatOption>
                        @foreach (var option in Options)
                        {
                            <MatOption TValue="int?" value="@option.Id">@option.Name</MatOption>
                        }
                    </MatSelect>
                }
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                @if (Applications == null)
                {
                    <p><em>Applications Loading...</em></p>
                }
                else
                {
                    <MatSelect Class="select-field" Label="Select an Application" Outlined="true" @bind-Value="EditableRule.Application.Id" TValue="int?">
                        <MatOption TValue="int?"></MatOption>
                        @foreach (var application in Applications)
                        {
                            <MatOption TValue="int?" value="@application.Id">@application.Name</MatOption>
                        }
                    </MatSelect>
                }
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                @if (Probes == null)
                {
                    <p><em>Probes Loading...</em></p>
                }
                else
                {
                    <MatSelect Class="select-field" Label="Select a Probe" Outlined="true" @bind-Value="EditableRule.Probe.Id" TValue="int?">
                        <MatOption TValue="int?"></MatOption>
                        @foreach (var probe in Probes)
                        {
                            <MatOption TValue="int?" value="@probe.Id">@probe.Name</MatOption>
                        }
                    </MatSelect>
                }
            </div>
        </div>
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                @if (Kits == null)
                {
                    <p><em>Kits Loading...</em></p>
                }
                else
                {
                    <MatSelect Class="select-field" Label="Select a Kit" Outlined="true" @bind-Value="EditableRule.Kit.Id" TValue="int?">
                        <MatOption TValue="int?"></MatOption>
                        @foreach (var kit in Kits)
                        {
                            <MatOption TValue="int?" value="@kit.Id">@kit.Name</MatOption>
                        }
                    </MatSelect>
                }
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                @if (Models == null)
                {
                    <p><em>Models Loading...</em></p>
                }
                else
                {
                    <MatSelect Class="select-field" Label="Select a Model" Outlined="true" @bind-Value="EditableRule.Model.Id" TValue="int?">
                        @foreach (var model in Models)
                        {
                            <MatOption TValue="int?" Value="@model.Id">@model.Name</MatOption>
                        }
                    </MatSelect>
                }
            </div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                @if (PhysicalModels == null)
                {
                    <p><em>Physical Models Loading...</em></p>
                }
                else
                {
                    <MatSelect Class="select-field" Label="Select a Physical Model" Outlined="true" @bind-Value="EditableRule.PhysicalModel.Id" TValue="int?">
                        <MatOption TValue="int?"></MatOption>
                        @foreach (var physicalModel in PhysicalModels)
                        {
                            <MatOption TValue="int?" value="@physicalModel.Id">@physicalModel.Name</MatOption>
                        }
                    </MatSelect>
                }
            </div>
        </div>
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                <MatInputTextComponent Label="Incremental Version" TValue="int?" @bind-Value="@EditableRule.IncrementalVersion"></MatInputTextComponent>
            </div>
        </div>
    </div>
}

<div>
    <MatButton Icon="save" Raised="true" Disabled="@EditableRule.Invalid" @onclick="@(async () => await OnConfirm())">Confirm</MatButton>
</div>
